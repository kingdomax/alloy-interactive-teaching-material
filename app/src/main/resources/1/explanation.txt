
//    _                                  __ 
//   | |                                /_ |
//   | |     ___  ___ ___  ___  _ __     | |
//   | |    / _ \/ __/ __|/ _ \| '_ \    | |
//   | |___|  __/\__ \__ \ (_) | | | |   | |
//   |______\___||___/___/\___/|_| |_|   |_|                                                                             

[1.1] Signatures
A signature is a user-defined type that represents a set of atoms. They are used to illustrate the things that exist in the world you are modeling. Signatures are declared using the "sig" keyword followed by the signature name and the curly braces that contain the properties of the signature.
For example, you could declare a signature for "Woman" with properties such as age, name, etc.
==> "sig Woman {....}"

[1.2] Multiplicities
Multiplicities allow us to constrain the size of sets and relations. They define the number of atoms that can be related to each other in a specific way. There are four types of multiplicities in Alloy: "one", "lone", "some", and "set".
- "one" indicates that there must be exactly one related atom in the set or relation.
- "lone" indicates that there can be at most one related atom in the set or relation.
- "some" indicates that there must be at least one related atom in the set or relation.
- "set" indicates that there can be any number of related atoms in the set or relation.
For example, you could declare a signature for "Man" and specify that there can only be one man in the world using the "one" multiplicity as follows:
==> "one sig Man {....}"

[1.3] Relations
Relations are declared within signatures to define the relationships between different signatures. They are declared using the colon operator to indicate the type of relation between two signatures. 
For example, you could declare a relation between the "Man" and "Woman" signatures to indicate that a man can have at most one wife as follows
==> "one sig Man { wife: lone Woman } // This means that a man can have either zero or one wife, and the wife must be a woman"

[1.4] Lesson Summary
In summary, signatures represent the things that exist in the world, multiplicities allow us to constrain the size of sets and relations, and relations define the relationships between different signatures. By using these concepts, you can create powerful models that accurately represent the world you are trying to model.
 